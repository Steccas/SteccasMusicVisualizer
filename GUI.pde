/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
 
/*
Copyright Â©2015 Luca Steccanella

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

public void loadMusic_click1(GButton source, GEvent event) { //_CODE_:loadMusic:249018:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
   selectInput("Select un file audio (mp3 o wav)", "fileSelected");
} //_CODE_:loadMusic:249018:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:291299:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
  if (isFileSelected())
  {  
    if (player !=null) a1 = new anima1(2, 3, 1);
    a1.exec=true;
    //a.n=1;
  }
} //_CODE_:button1:291299:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:280314:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
  if (isFileSelected())
  {  
    if (player !=null) a2 = new stars();
    a2.exec=true;
    //a.n=1;
  }
} //_CODE_:button2:280314:

// Create all the GUI controls. 
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(surface != null)
    surface.setTitle("Steccas Music Visualizer");
  label1 = new GLabel(this, width/2-210, 8, 420, 126);
  label1.setText("Steccas Music Visualizer");
  //label1.setTextBold();
  label1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  label1.setFont(new Font("SanSerif", Font.PLAIN, 48));
  label1.setOpaque(false);
  loadMusic = new GButton(this, width/2-385, 126+16, 770, 112);
  loadMusic.setText("Carica musica");
  loadMusic.setTextBold();
  loadMusic.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  loadMusic.addEventHandler(this, "loadMusic_click1");
  button1 = new GButton(this, width/2-385, 126+32+112, 378, btnw);
  button1.setText("Ring");
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(this, width/2-385+(770-378), 126+32+112, 378, btnw);
  button2.setText("Stars");
  button2.addEventHandler(this, "button2_click1");
}

// Variable declarations 
// autogenerated do not edit
GLabel label1; 
GButton loadMusic; 
GButton button1; 
GButton button2; 